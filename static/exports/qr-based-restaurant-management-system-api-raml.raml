#%RAML 0.8
title: QR-Based Restaurant Management System API
version: 1.0.1
documentation:
- title: QR-Based Restaurant Management System API
  content: API for browsing menu items and placing orders in a QR-based restaurant system.
baseUri: https://restaurant-api-i70b.onrender.com/api
securedBy: []
protocols:
- HTTPS
baseUriParameters: {}
schemas:
- MenuItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MenuItem",
      "title": "MenuItem",
      "description": "A single menu item available for ordering.",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Unique identifier of the menu item",
          "example": "66cfe9b1f23a4a0012ab0001",
          "type": "string"
        },
        "name": {
          "description": "Display name of the item",
          "example": "Margherita Pizza",
          "type": "string"
        },
        "price": {
          "description": "Price in minor currency or standard units, depending on system",
          "example": 1199,
          "type": "number"
        },
        "isAvailable": {
          "description": "Whether the item is currently available",
          "example": true,
          "type": "boolean"
        },
        "description": {
          "description": "Short description of the item",
          "example": "Classic pizza with tomato sauce, mozzarella, and basil",
          "type": "string"
        },
        "category": {
          "description": "Category or section",
          "example": "Pizza",
          "type": "string"
        },
        "image": {
          "description": "Image URL",
          "example": "https://cdn.example.com/img/margherita.jpg",
          "type": "string"
        }
      },
      "required": [
        "_id",
        "name",
        "price",
        "isAvailable"
      ]
    }
- MenuResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "MenuResponse",
      "title": "MenuResponse",
      "description": "Response containing a list of menu items.",
      "type": "object",
      "properties": {
        "success": {
          "description": "Indicates if the request was successful",
          "example": true,
          "type": "boolean"
        },
        "data": {
          "description": "Menu items",
          "type": "array",
          "items": {
            "id": "MenuItem",
            "title": "MenuItem",
            "description": "A single menu item available for ordering.",
            "type": "object",
            "properties": {
              "_id": {
                "description": "Unique identifier of the menu item",
                "example": "66cfe9b1f23a4a0012ab0001",
                "type": "string"
              },
              "name": {
                "description": "Display name of the item",
                "example": "Margherita Pizza",
                "type": "string"
              },
              "price": {
                "description": "Price in minor currency or standard units, depending on system",
                "example": 1199,
                "type": "number"
              },
              "isAvailable": {
                "description": "Whether the item is currently available",
                "example": true,
                "type": "boolean"
              },
              "description": {
                "description": "Short description of the item",
                "example": "Classic pizza with tomato sauce, mozzarella, and basil",
                "type": "string"
              },
              "category": {
                "description": "Category or section",
                "example": "Pizza",
                "type": "string"
              },
              "image": {
                "description": "Image URL",
                "example": "https://cdn.example.com/img/margherita.jpg",
                "type": "string"
              }
            },
            "required": [
              "_id",
              "name",
              "price",
              "isAvailable"
            ]
          }
        },
        "count": {
          "description": "Number of items returned",
          "example": 2,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "success",
        "data"
      ]
    }
- OrderItem: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "OrderItem",
      "title": "OrderItem",
      "description": "An individual line item within an order.",
      "type": "object",
      "properties": {
        "menuItem": {
          "description": "Menu item ID",
          "example": "66cfe9b1f23a4a0012ab0001",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity ordered",
          "example": 2,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        }
      },
      "required": [
        "menuItem",
        "quantity"
      ]
    }
- CustomerDetails: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "CustomerDetails",
      "title": "CustomerDetails",
      "description": "Minimal customer contact and delivery info.",
      "type": "object",
      "properties": {
        "contact": {
          "description": "Customer contact number or identifier",
          "example": "+92-300-1234567",
          "type": "string"
        },
        "address": {
          "description": "Delivery address or table location note",
          "example": "Table 7 - Hall A",
          "type": "string"
        }
      },
      "required": [
        "contact",
        "address"
      ]
    }
- OrderType: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "OrderType",
      "description": "How the order will be fulfilled.",
      "example": "dine-in",
      "type": "string",
      "additionalProperties": false,
      "enum": [
        "dine-in",
        "takeaway",
        "delivery"
      ]
    }
- OrderInput: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "OrderInput",
      "title": "OrderInput",
      "description": "Payload used to create a new order.",
      "type": "object",
      "properties": {
        "items": {
          "description": "List of items being ordered",
          "type": "array",
          "items": {
            "id": "OrderItem",
            "title": "OrderItem",
            "description": "An individual line item within an order.",
            "type": "object",
            "properties": {
              "menuItem": {
                "description": "Menu item ID",
                "example": "66cfe9b1f23a4a0012ab0001",
                "type": "string"
              },
              "quantity": {
                "description": "Quantity ordered",
                "example": 2,
                "type": "integer",
                "minimum": 1.0,
                "format": "int32"
              }
            },
            "required": [
              "menuItem",
              "quantity"
            ]
          }
        },
        "tableNumber": {
          "description": "Table number for dine-in orders",
          "example": 7,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "totalAmount": {
          "description": "Total amount for the order",
          "example": 3297,
          "type": "number",
          "minimum": 0.0
        },
        "orderType": {
          "title": "OrderType",
          "description": "How the order will be fulfilled.",
          "example": "dine-in",
          "type": "string",
          "additionalProperties": false,
          "enum": [
            "dine-in",
            "takeaway",
            "delivery"
          ]
        },
        "customerDetails": {
          "id": "CustomerDetails",
          "title": "CustomerDetails",
          "description": "Minimal customer contact and delivery info.",
          "type": "object",
          "properties": {
            "contact": {
              "description": "Customer contact number or identifier",
              "example": "+92-300-1234567",
              "type": "string"
            },
            "address": {
              "description": "Delivery address or table location note",
              "example": "Table 7 - Hall A",
              "type": "string"
            }
          },
          "required": [
            "contact",
            "address"
          ]
        }
      },
      "required": [
        "items",
        "tableNumber",
        "totalAmount",
        "orderType",
        "customerDetails"
      ]
    }
- Order: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Order",
      "title": "Order",
      "description": "An order placed by a customer.",
      "type": "object",
      "properties": {
        "_id": {
          "description": "Order ID",
          "example": "66cff0aa3a2d4a0012cdbeef",
          "type": "string"
        },
        "items": {
          "description": "List of ordered items",
          "type": "array",
          "items": {
            "id": "OrderItem",
            "title": "OrderItem",
            "description": "An individual line item within an order.",
            "type": "object",
            "properties": {
              "menuItem": {
                "description": "Menu item ID",
                "example": "66cfe9b1f23a4a0012ab0001",
                "type": "string"
              },
              "quantity": {
                "description": "Quantity ordered",
                "example": 2,
                "type": "integer",
                "minimum": 1.0,
                "format": "int32"
              }
            },
            "required": [
              "menuItem",
              "quantity"
            ]
          }
        },
        "totalAmount": {
          "description": "Total amount charged",
          "example": 3297,
          "type": "number"
        },
        "orderType": {
          "title": "OrderType",
          "description": "How the order will be fulfilled.",
          "example": "dine-in",
          "type": "string",
          "additionalProperties": false,
          "enum": [
            "dine-in",
            "takeaway",
            "delivery"
          ]
        },
        "status": {
          "description": "Current order status",
          "example": "pending",
          "type": "string"
        },
        "createdAt": {
          "description": "Creation timestamp (ISO 8601)",
          "example": "2025-08-25T10:00:00Z",
          "type": "string",
          "format": "date-time"
        },
        "tableNumber": {
          "description": "Table number for dine-in",
          "example": 7,
          "type": "integer",
          "format": "int32"
        },
        "customerDetails": {
          "id": "CustomerDetails",
          "title": "CustomerDetails",
          "description": "Minimal customer contact and delivery info.",
          "type": "object",
          "properties": {
            "contact": {
              "description": "Customer contact number or identifier",
              "example": "+92-300-1234567",
              "type": "string"
            },
            "address": {
              "description": "Delivery address or table location note",
              "example": "Table 7 - Hall A",
              "type": "string"
            }
          },
          "required": [
            "contact",
            "address"
          ]
        }
      },
      "required": [
        "_id",
        "items",
        "totalAmount",
        "orderType",
        "status",
        "createdAt"
      ]
    }
- OrderResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "OrderResponse",
      "title": "OrderResponse",
      "description": "Response containing a single order.",
      "type": "object",
      "properties": {
        "success": {
          "description": "Indicates if the request was successful",
          "example": true,
          "type": "boolean"
        },
        "data": {
          "id": "Order",
          "title": "Order",
          "description": "An order placed by a customer.",
          "type": "object",
          "properties": {
            "_id": {
              "description": "Order ID",
              "example": "66cff0aa3a2d4a0012cdbeef",
              "type": "string"
            },
            "items": {
              "description": "List of ordered items",
              "type": "array",
              "items": {
                "id": "OrderItem",
                "title": "OrderItem",
                "description": "An individual line item within an order.",
                "type": "object",
                "properties": {
                  "menuItem": {
                    "description": "Menu item ID",
                    "example": "66cfe9b1f23a4a0012ab0001",
                    "type": "string"
                  },
                  "quantity": {
                    "description": "Quantity ordered",
                    "example": 2,
                    "type": "integer",
                    "minimum": 1.0,
                    "format": "int32"
                  }
                },
                "required": [
                  "menuItem",
                  "quantity"
                ]
              }
            },
            "totalAmount": {
              "description": "Total amount charged",
              "example": 3297,
              "type": "number"
            },
            "orderType": {
              "title": "OrderType",
              "description": "How the order will be fulfilled.",
              "example": "dine-in",
              "type": "string",
              "additionalProperties": false,
              "enum": [
                "dine-in",
                "takeaway",
                "delivery"
              ]
            },
            "status": {
              "description": "Current order status",
              "example": "pending",
              "type": "string"
            },
            "createdAt": {
              "description": "Creation timestamp (ISO 8601)",
              "example": "2025-08-25T10:00:00Z",
              "type": "string",
              "format": "date-time"
            },
            "tableNumber": {
              "description": "Table number for dine-in",
              "example": 7,
              "type": "integer",
              "format": "int32"
            },
            "customerDetails": {
              "id": "CustomerDetails",
              "title": "CustomerDetails",
              "description": "Minimal customer contact and delivery info.",
              "type": "object",
              "properties": {
                "contact": {
                  "description": "Customer contact number or identifier",
                  "example": "+92-300-1234567",
                  "type": "string"
                },
                "address": {
                  "description": "Delivery address or table location note",
                  "example": "Table 7 - Hall A",
                  "type": "string"
                }
              },
              "required": [
                "contact",
                "address"
              ]
            }
          },
          "required": [
            "_id",
            "items",
            "totalAmount",
            "orderType",
            "status",
            "createdAt"
          ]
        }
      },
      "required": [
        "success",
        "data"
      ]
    }
- OrderHistoryResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "OrderHistoryResponse",
      "title": "OrderHistoryResponse",
      "description": "Response containing a list of orders.",
      "type": "object",
      "properties": {
        "success": {
          "description": "Indicates if the request was successful",
          "example": true,
          "type": "boolean"
        },
        "data": {
          "description": "Orders",
          "type": "array",
          "items": {
            "id": "Order",
            "title": "Order",
            "description": "An order placed by a customer.",
            "type": "object",
            "properties": {
              "_id": {
                "description": "Order ID",
                "example": "66cff0aa3a2d4a0012cdbeef",
                "type": "string"
              },
              "items": {
                "description": "List of ordered items",
                "type": "array",
                "items": {
                  "id": "OrderItem",
                  "title": "OrderItem",
                  "description": "An individual line item within an order.",
                  "type": "object",
                  "properties": {
                    "menuItem": {
                      "description": "Menu item ID",
                      "example": "66cfe9b1f23a4a0012ab0001",
                      "type": "string"
                    },
                    "quantity": {
                      "description": "Quantity ordered",
                      "example": 2,
                      "type": "integer",
                      "minimum": 1.0,
                      "format": "int32"
                    }
                  },
                  "required": [
                    "menuItem",
                    "quantity"
                  ]
                }
              },
              "totalAmount": {
                "description": "Total amount charged",
                "example": 3297,
                "type": "number"
              },
              "orderType": {
                "title": "OrderType",
                "description": "How the order will be fulfilled.",
                "example": "dine-in",
                "type": "string",
                "additionalProperties": false,
                "enum": [
                  "dine-in",
                  "takeaway",
                  "delivery"
                ]
              },
              "status": {
                "description": "Current order status",
                "example": "pending",
                "type": "string"
              },
              "createdAt": {
                "description": "Creation timestamp (ISO 8601)",
                "example": "2025-08-25T10:00:00Z",
                "type": "string",
                "format": "date-time"
              },
              "tableNumber": {
                "description": "Table number for dine-in",
                "example": 7,
                "type": "integer",
                "format": "int32"
              },
              "customerDetails": {
                "id": "CustomerDetails",
                "title": "CustomerDetails",
                "description": "Minimal customer contact and delivery info.",
                "type": "object",
                "properties": {
                  "contact": {
                    "description": "Customer contact number or identifier",
                    "example": "+92-300-1234567",
                    "type": "string"
                  },
                  "address": {
                    "description": "Delivery address or table location note",
                    "example": "Table 7 - Hall A",
                    "type": "string"
                  }
                },
                "required": [
                  "contact",
                  "address"
                ]
              }
            },
            "required": [
              "_id",
              "items",
              "totalAmount",
              "orderType",
              "status",
              "createdAt"
            ]
          }
        },
        "count": {
          "description": "Number of orders returned",
          "example": 1,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "success",
        "data"
      ]
    }
- ErrorResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ErrorResponse",
      "title": "ErrorResponse",
      "description": "Standard error payload.",
      "type": "object",
      "properties": {
        "success": {
          "description": "Always false for errors",
          "example": false,
          "type": "boolean"
        },
        "error": {
          "description": "Human-readable error message",
          "example": "Invalid token",
          "type": "string"
        }
      },
      "required": [
        "success",
        "error"
      ]
    }
/menu:
  get:
    description: Returns the full list of menu items currently available for ordering.
    responses:
      '200':
        description: List of menu items
        body:
          application/json:
            schema: |
              {
                "id": "MenuResponse",
                "title": "MenuResponse",
                "description": "Response containing a list of menu items.",
                "example": {
                  "success": true,
                  "count": 2,
                  "data": [
                    {
                      "_id": "66cfe9b1f23a4a0012ab0001",
                      "name": "Margherita Pizza",
                      "description": "Classic pizza with tomato sauce, mozzarella, and basil",
                      "price": 1199.0,
                      "category": "Pizza",
                      "image": "https://cdn.example.com/img/margherita.jpg",
                      "isAvailable": true
                    },
                    {
                      "_id": "66cfe9b1f23a4a0012ab0002",
                      "name": "Chicken Biryani",
                      "description": "Spiced rice with marinated chicken",
                      "price": 899.0,
                      "category": "Main",
                      "image": "https://cdn.example.com/img/biryani.jpg",
                      "isAvailable": true
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "success": {
                    "description": "Indicates if the request was successful",
                    "example": true,
                    "type": "boolean"
                  },
                  "data": {
                    "description": "Menu items",
                    "type": "array",
                    "items": {
                      "id": "MenuItem",
                      "title": "MenuItem",
                      "description": "A single menu item available for ordering.",
                      "type": "object",
                      "properties": {
                        "_id": {
                          "description": "Unique identifier of the menu item",
                          "example": "66cfe9b1f23a4a0012ab0001",
                          "type": "string"
                        },
                        "name": {
                          "description": "Display name of the item",
                          "example": "Margherita Pizza",
                          "type": "string"
                        },
                        "price": {
                          "description": "Price in minor currency or standard units, depending on system",
                          "example": 1199,
                          "type": "number"
                        },
                        "isAvailable": {
                          "description": "Whether the item is currently available",
                          "example": true,
                          "type": "boolean"
                        },
                        "description": {
                          "description": "Short description of the item",
                          "example": "Classic pizza with tomato sauce, mozzarella, and basil",
                          "type": "string"
                        },
                        "category": {
                          "description": "Category or section",
                          "example": "Pizza",
                          "type": "string"
                        },
                        "image": {
                          "description": "Image URL",
                          "example": "https://cdn.example.com/img/margherita.jpg",
                          "type": "string"
                        }
                      },
                      "required": [
                        "_id",
                        "name",
                        "price",
                        "isAvailable"
                      ]
                    }
                  },
                  "count": {
                    "description": "Number of items returned",
                    "example": 2,
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "required": [
                  "success",
                  "data"
                ]
              }
            example: '{"success":true,"count":2,"data":[{"_id":"66cfe9b1f23a4a0012ab0001","name":"Margherita Pizza","description":"Classic pizza with tomato sauce, mozzarella, and basil","price":1199.0,"category":"Pizza","image":"https://cdn.example.com/img/margherita.jpg","isAvailable":true},{"_id":"66cfe9b1f23a4a0012ab0002","name":"Chicken Biryani","description":"Spiced rice with marinated chicken","price":899.0,"category":"Main","image":"https://cdn.example.com/img/biryani.jpg","isAvailable":true}]}'
      '500':
        description: Server error
        body:
          application/json:
            schema: |
              {
                "id": "ErrorResponse",
                "title": "ErrorResponse",
                "description": "Standard error payload.",
                "example": {
                  "success": false,
                  "error": "Unexpected error"
                },
                "type": "object",
                "properties": {
                  "success": {
                    "description": "Always false for errors",
                    "example": false,
                    "type": "boolean"
                  },
                  "error": {
                    "description": "Human-readable error message",
                    "example": "Invalid token",
                    "type": "string"
                  }
                },
                "required": [
                  "success",
                  "error"
                ]
              }
            example: '{"success":false,"error":"Unexpected error"}'
/order:
  /place-order:
    post:
      securedBy:
      - bearerAuth
      description: Creates an order for the specified items and table.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "OrderInput",
              "title": "OrderInput",
              "description": "Order payload including items, table number, and customer details.",
              "example": {
                "items": [
                  {
                    "menuItem": "66cfe9b1f23a4a0012ab0001",
                    "quantity": 2
                  },
                  {
                    "menuItem": "66cfe9b1f23a4a0012ab0002",
                    "quantity": 1
                  }
                ],
                "tableNumber": 7,
                "totalAmount": 3297.0,
                "orderType": "dine-in",
                "customerDetails": {
                  "contact": "+92-300-1234567",
                  "address": "Table 7 - Hall A"
                }
              },
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items being ordered",
                  "type": "array",
                  "items": {
                    "id": "OrderItem",
                    "title": "OrderItem",
                    "description": "An individual line item within an order.",
                    "type": "object",
                    "properties": {
                      "menuItem": {
                        "description": "Menu item ID",
                        "example": "66cfe9b1f23a4a0012ab0001",
                        "type": "string"
                      },
                      "quantity": {
                        "description": "Quantity ordered",
                        "example": 2,
                        "type": "integer",
                        "minimum": 1.0,
                        "format": "int32"
                      }
                    },
                    "required": [
                      "menuItem",
                      "quantity"
                    ]
                  }
                },
                "tableNumber": {
                  "description": "Table number for dine-in orders",
                  "example": 7,
                  "type": "integer",
                  "minimum": 1.0,
                  "format": "int32"
                },
                "totalAmount": {
                  "description": "Total amount for the order",
                  "example": 3297,
                  "type": "number",
                  "minimum": 0.0
                },
                "orderType": {
                  "title": "OrderType",
                  "description": "How the order will be fulfilled.",
                  "example": "dine-in",
                  "type": "string",
                  "additionalProperties": false,
                  "enum": [
                    "dine-in",
                    "takeaway",
                    "delivery"
                  ]
                },
                "customerDetails": {
                  "id": "CustomerDetails",
                  "title": "CustomerDetails",
                  "description": "Minimal customer contact and delivery info.",
                  "type": "object",
                  "properties": {
                    "contact": {
                      "description": "Customer contact number or identifier",
                      "example": "+92-300-1234567",
                      "type": "string"
                    },
                    "address": {
                      "description": "Delivery address or table location note",
                      "example": "Table 7 - Hall A",
                      "type": "string"
                    }
                  },
                  "required": [
                    "contact",
                    "address"
                  ]
                }
              },
              "required": [
                "items",
                "tableNumber",
                "totalAmount",
                "orderType",
                "customerDetails"
              ]
            }
          example: '{"items":[{"menuItem":"66cfe9b1f23a4a0012ab0001","quantity":2},{"menuItem":"66cfe9b1f23a4a0012ab0002","quantity":1}],"tableNumber":7,"totalAmount":3297.0,"orderType":"dine-in","customerDetails":{"contact":"+92-300-1234567","address":"Table 7 - Hall A"}}'
      responses:
        '201':
          description: Order placed successfully
          headers:
            Location:
              required: false
          body:
            application/json:
              schema: |
                {
                  "id": "OrderResponse",
                  "title": "OrderResponse",
                  "description": "Response containing a single order.",
                  "example": {
                    "success": true,
                    "data": {
                      "_id": "66cff0aa3a2d4a0012cdbeef",
                      "items": [
                        {
                          "menuItem": "66cfe9b1f23a4a0012ab0001",
                          "quantity": 2
                        },
                        {
                          "menuItem": "66cfe9b1f23a4a0012ab0002",
                          "quantity": 1
                        }
                      ],
                      "tableNumber": 7,
                      "totalAmount": 3297.0,
                      "orderType": "dine-in",
                      "customerDetails": {
                        "contact": "+92-300-1234567",
                        "address": "Table 7 - Hall A"
                      },
                      "status": "pending",
                      "createdAt": "2025-08-25T10:00:00Z"
                    }
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Indicates if the request was successful",
                      "example": true,
                      "type": "boolean"
                    },
                    "data": {
                      "id": "Order",
                      "title": "Order",
                      "description": "An order placed by a customer.",
                      "type": "object",
                      "properties": {
                        "_id": {
                          "description": "Order ID",
                          "example": "66cff0aa3a2d4a0012cdbeef",
                          "type": "string"
                        },
                        "items": {
                          "description": "List of ordered items",
                          "type": "array",
                          "items": {
                            "id": "OrderItem",
                            "title": "OrderItem",
                            "description": "An individual line item within an order.",
                            "type": "object",
                            "properties": {
                              "menuItem": {
                                "description": "Menu item ID",
                                "example": "66cfe9b1f23a4a0012ab0001",
                                "type": "string"
                              },
                              "quantity": {
                                "description": "Quantity ordered",
                                "example": 2,
                                "type": "integer",
                                "minimum": 1.0,
                                "format": "int32"
                              }
                            },
                            "required": [
                              "menuItem",
                              "quantity"
                            ]
                          }
                        },
                        "totalAmount": {
                          "description": "Total amount charged",
                          "example": 3297,
                          "type": "number"
                        },
                        "orderType": {
                          "title": "OrderType",
                          "description": "How the order will be fulfilled.",
                          "example": "dine-in",
                          "type": "string",
                          "additionalProperties": false,
                          "enum": [
                            "dine-in",
                            "takeaway",
                            "delivery"
                          ]
                        },
                        "status": {
                          "description": "Current order status",
                          "example": "pending",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "Creation timestamp (ISO 8601)",
                          "example": "2025-08-25T10:00:00Z",
                          "type": "string",
                          "format": "date-time"
                        },
                        "tableNumber": {
                          "description": "Table number for dine-in",
                          "example": 7,
                          "type": "integer",
                          "format": "int32"
                        },
                        "customerDetails": {
                          "id": "CustomerDetails",
                          "title": "CustomerDetails",
                          "description": "Minimal customer contact and delivery info.",
                          "type": "object",
                          "properties": {
                            "contact": {
                              "description": "Customer contact number or identifier",
                              "example": "+92-300-1234567",
                              "type": "string"
                            },
                            "address": {
                              "description": "Delivery address or table location note",
                              "example": "Table 7 - Hall A",
                              "type": "string"
                            }
                          },
                          "required": [
                            "contact",
                            "address"
                          ]
                        }
                      },
                      "required": [
                        "_id",
                        "items",
                        "totalAmount",
                        "orderType",
                        "status",
                        "createdAt"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              example: '{"success":true,"data":{"_id":"66cff0aa3a2d4a0012cdbeef","items":[{"menuItem":"66cfe9b1f23a4a0012ab0001","quantity":2},{"menuItem":"66cfe9b1f23a4a0012ab0002","quantity":1}],"tableNumber":7,"totalAmount":3297.0,"orderType":"dine-in","customerDetails":{"contact":"+92-300-1234567","address":"Table 7 - Hall A"},"status":"pending","createdAt":"2025-08-25T10:00:00Z"}}'
        '400':
          description: Invalid request
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "description": "Standard error payload.",
                  "example": {
                    "success": false,
                    "error": "items must not be empty"
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Always false for errors",
                      "example": false,
                      "type": "boolean"
                    },
                    "error": {
                      "description": "Human-readable error message",
                      "example": "Invalid token",
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              example: '{"success":false,"error":"items must not be empty"}'
        '401':
          description: Unauthorized
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "description": "Standard error payload.",
                  "example": {
                    "success": false,
                    "error": "Missing or invalid token"
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Always false for errors",
                      "example": false,
                      "type": "boolean"
                    },
                    "error": {
                      "description": "Human-readable error message",
                      "example": "Invalid token",
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              example: '{"success":false,"error":"Missing or invalid token"}'
        '500':
          description: Server error
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "description": "Standard error payload.",
                  "example": {
                    "success": false,
                    "error": "Unexpected error"
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Always false for errors",
                      "example": false,
                      "type": "boolean"
                    },
                    "error": {
                      "description": "Human-readable error message",
                      "example": "Invalid token",
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              example: '{"success":false,"error":"Unexpected error"}'
  /history:
    get:
      securedBy:
      - bearerAuth
      description: Returns the authenticated user's recent orders.
      responses:
        '200':
          description: List of previous orders
          body:
            application/json:
              schema: |
                {
                  "id": "OrderHistoryResponse",
                  "title": "OrderHistoryResponse",
                  "description": "Response containing a list of orders.",
                  "example": {
                    "success": true,
                    "count": 1,
                    "data": [
                      {
                        "_id": "66cff0aa3a2d4a0012cdbeef",
                        "items": [
                          {
                            "menuItem": "66cfe9b1f23a4a0012ab0001",
                            "quantity": 2
                          }
                        ],
                        "tableNumber": 7,
                        "totalAmount": 2398.0,
                        "orderType": "dine-in",
                        "customerDetails": {
                          "contact": "+92-300-1234567",
                          "address": "Table 7 - Hall A"
                        },
                        "status": "served",
                        "createdAt": "2025-08-20T14:35:00Z"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Indicates if the request was successful",
                      "example": true,
                      "type": "boolean"
                    },
                    "data": {
                      "description": "Orders",
                      "type": "array",
                      "items": {
                        "id": "Order",
                        "title": "Order",
                        "description": "An order placed by a customer.",
                        "type": "object",
                        "properties": {
                          "_id": {
                            "description": "Order ID",
                            "example": "66cff0aa3a2d4a0012cdbeef",
                            "type": "string"
                          },
                          "items": {
                            "description": "List of ordered items",
                            "type": "array",
                            "items": {
                              "id": "OrderItem",
                              "title": "OrderItem",
                              "description": "An individual line item within an order.",
                              "type": "object",
                              "properties": {
                                "menuItem": {
                                  "description": "Menu item ID",
                                  "example": "66cfe9b1f23a4a0012ab0001",
                                  "type": "string"
                                },
                                "quantity": {
                                  "description": "Quantity ordered",
                                  "example": 2,
                                  "type": "integer",
                                  "minimum": 1.0,
                                  "format": "int32"
                                }
                              },
                              "required": [
                                "menuItem",
                                "quantity"
                              ]
                            }
                          },
                          "totalAmount": {
                            "description": "Total amount charged",
                            "example": 3297,
                            "type": "number"
                          },
                          "orderType": {
                            "title": "OrderType",
                            "description": "How the order will be fulfilled.",
                            "example": "dine-in",
                            "type": "string",
                            "additionalProperties": false,
                            "enum": [
                              "dine-in",
                              "takeaway",
                              "delivery"
                            ]
                          },
                          "status": {
                            "description": "Current order status",
                            "example": "pending",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "Creation timestamp (ISO 8601)",
                            "example": "2025-08-25T10:00:00Z",
                            "type": "string",
                            "format": "date-time"
                          },
                          "tableNumber": {
                            "description": "Table number for dine-in",
                            "example": 7,
                            "type": "integer",
                            "format": "int32"
                          },
                          "customerDetails": {
                            "id": "CustomerDetails",
                            "title": "CustomerDetails",
                            "description": "Minimal customer contact and delivery info.",
                            "type": "object",
                            "properties": {
                              "contact": {
                                "description": "Customer contact number or identifier",
                                "example": "+92-300-1234567",
                                "type": "string"
                              },
                              "address": {
                                "description": "Delivery address or table location note",
                                "example": "Table 7 - Hall A",
                                "type": "string"
                              }
                            },
                            "required": [
                              "contact",
                              "address"
                            ]
                          }
                        },
                        "required": [
                          "_id",
                          "items",
                          "totalAmount",
                          "orderType",
                          "status",
                          "createdAt"
                        ]
                      }
                    },
                    "count": {
                      "description": "Number of orders returned",
                      "example": 1,
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ]
                }
              example: '{"success":true,"count":1,"data":[{"_id":"66cff0aa3a2d4a0012cdbeef","items":[{"menuItem":"66cfe9b1f23a4a0012ab0001","quantity":2}],"tableNumber":7,"totalAmount":2398.0,"orderType":"dine-in","customerDetails":{"contact":"+92-300-1234567","address":"Table 7 - Hall A"},"status":"served","createdAt":"2025-08-20T14:35:00Z"}]}'
        '401':
          description: Unauthorized
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "description": "Standard error payload.",
                  "example": {
                    "success": false,
                    "error": "Missing or invalid token"
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Always false for errors",
                      "example": false,
                      "type": "boolean"
                    },
                    "error": {
                      "description": "Human-readable error message",
                      "example": "Invalid token",
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              example: '{"success":false,"error":"Missing or invalid token"}'
        '500':
          description: Server error
          body:
            application/json:
              schema: |
                {
                  "id": "ErrorResponse",
                  "title": "ErrorResponse",
                  "description": "Standard error payload.",
                  "example": {
                    "success": false,
                    "error": "Unexpected error"
                  },
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Always false for errors",
                      "example": false,
                      "type": "boolean"
                    },
                    "error": {
                      "description": "Human-readable error message",
                      "example": "Invalid token",
                      "type": "string"
                    }
                  },
                  "required": [
                    "success",
                    "error"
                  ]
                }
              example: '{"success":false,"error":"Unexpected error"}'
